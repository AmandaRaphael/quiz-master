{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/components/answerButtons/ShowChoices.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MyContext from \".\";\nimport { useContext } from \"react\";\nimport ShowQuestion from '../ShowQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowChoices = question => {\n  _s();\n\n  const {\n    nextQuestion\n  } = useContext(MyContext);\n  question.question[nextQuestion - 1].answers.sort(() => 0.5 - Math.random()).map((ans, i) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: answerButtonHandler,\n      className: buttonClass,\n      children: ans\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this);\n  });\n};\n\n_s(ShowChoices, \"56b+s2VDvpNmIgvGJdORwnhlUuE=\");\n\n_c = ShowChoices;\nexport default ShowChoices;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowChoices\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/components/answerButtons/ShowChoices.jsx"],"names":["React","MyContext","useContext","ShowQuestion","ShowChoices","question","nextQuestion","answers","sort","Math","random","map","ans","i","answerButtonHandler","buttonClass"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,GAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AACA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAmBJ,UAAU,CAACD,SAAD,CAAnC;AACAI,EAAAA,QAAQ,CAACA,QAAT,CAAkBC,YAAY,GAAG,CAAjC,EAAoCC,OAApC,CACKC,IADL,CACU,MAAM,MAAMC,IAAI,CAACC,MAAL,EADtB,EAEKC,GAFL,CAES,CAACC,GAAD,EAAMC,CAAN,KAAY;AACb,wBACI;AAAgB,MAAA,OAAO,EAAEC,mBAAzB;AAA8C,MAAA,SAAS,EAAEC,WAAzD;AAAA,gBACKH;AADL,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GARL;AASH,CAXD;;GAAMT,W;;KAAAA,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport MyContext from \".\";\nimport { useContext } from \"react\";\nimport ShowQuestion from '../ShowQuestion';\nconst ShowChoices = (question) => {\n    const { nextQuestion } = useContext(MyContext)\n    question.question[nextQuestion - 1].answers\n        .sort(() => 0.5 - Math.random())\n        .map((ans, i) => {\n            return (\n                <button key={i} onClick={answerButtonHandler} className={buttonClass}>\n                    {ans}\n                </button>\n            );\n        });\n}\nexport default ShowChoices\n"]},"metadata":{},"sourceType":"module"}