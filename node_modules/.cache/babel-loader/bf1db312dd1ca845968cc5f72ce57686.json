{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const questionsArray = [{\n    question: \"Choose the right answer\",\n    answers: [\"This first answer is the only right answer\", \"This is an ancient rite\", \"A wright is a skilled maker of objects\", \"You have forfeited the right to do this\"]\n  }, {\n    question: \"Which answer is the right one?\",\n    answers: [\"I am the one. Pick me! Pick me!\", \"I was number two in the JSON file\", \"We, the people, but three's a crowd\", \"Four tunes favour the bold\"]\n  }, {\n    question: \"Choose the answer with the check mark\",\n    answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"]\n  }];\n  const [nextQuestion, setNextQuestion] = useState(1);\n  useEffect(() => {\n    const showQuestion = questionsArray.map((questionObj, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [questionObj.question, i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answerButton flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: questionObj.answers[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: questionObj.answers[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: questionObj.answers[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: questionObj.answers[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    });\n    return () => {};\n  }, [nextQuestion]);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionsArray,\n      nextQuestion,\n      setNextQuestion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyProvider, \"cgCZlzo9P9FjZttxaKGIPl3j0/E=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx"],"names":["useState","useEffect","MyContext","MyProvider","children","questionsArray","question","answers","nextQuestion","setNextQuestion","showQuestion","map","questionObj","i"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,UAAU,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAEjC,QAAMC,cAAc,GAAG,CACrB;AACEC,IAAAA,QAAQ,EAAE,yBADZ;AAEEC,IAAAA,OAAO,EAAE,CACP,4CADO,EAEP,yBAFO,EAGP,wCAHO,EAIP,yCAJO;AAFX,GADqB,EAUrB;AACED,IAAAA,QAAQ,EAAE,gCADZ;AAEEC,IAAAA,OAAO,EAAE,CACP,iCADO,EAEP,mCAFO,EAGP,qCAHO,EAIP,4BAJO;AAFX,GAVqB,EAmBrB;AACED,IAAAA,QAAQ,EAAE,uCADZ;AAEEC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,SAA/B,EAA0C,SAA1C;AAFX,GAnBqB,CAAvB;AAyBA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,YAAY,GAAGL,cAAc,CAACM,GAAf,CAAmB,CAACC,WAAD,EAAcC,CAAd,KAAoB;AAC3D,0BAAO;AAAA,gCACH;AAAA,qBAAID,WAAW,CAACN,QAAhB,EAA2BO,CAAC,GAAC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAEJ;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAwBD,WAAW,CAACL,OAAZ,CAAoB,CAApB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAwBK,WAAW,CAACL,OAAZ,CAAoB,CAApB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAwBK,WAAW,CAACL,OAAZ,CAAoB,CAApB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA,sBAAwBK,WAAW,CAACL,OAAZ,CAAoB,CAApB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AASC,KAVmB,CAArB;AAWF,WAAO,MAAM,CAEZ,CAFD;AAGD,GAfQ,EAeN,CAACC,YAAD,CAfM,CAAT;AAgBA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACH,MAAAA,cAAD;AAAgBG,MAAAA,YAAhB;AAA6BC,MAAAA;AAA7B,KAA3B;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjDD;;GAAMD,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["\nimport { useState, useEffect } from \"react\";\n\nimport MyContext from \"./MyContext\";\nconst MyProvider = ({ children }) => {\n\n    const questionsArray = [\n      {\n        question: \"Choose the right answer\",\n        answers: [\n          \"This first answer is the only right answer\",\n          \"This is an ancient rite\",\n          \"A wright is a skilled maker of objects\",\n          \"You have forfeited the right to do this\",\n        ],\n      },\n      {\n        question: \"Which answer is the right one?\",\n        answers: [\n          \"I am the one. Pick me! Pick me!\",\n          \"I was number two in the JSON file\",\n          \"We, the people, but three's a crowd\",\n          \"Four tunes favour the bold\",\n        ],\n      },\n      {\n        question: \"Choose the answer with the check mark\",\n        answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"],\n      },\n    ];\n   \n    const [nextQuestion, setNextQuestion] = useState(1)\n    useEffect(() => {\n        const showQuestion = questionsArray.map((questionObj, i) => {\n         return <div>\n             <p>{questionObj.question}{ i+1}</p>\n            <div className=\"answerButton flex\">\n              <button class=\"button\">{questionObj.answers[0]}</button>\n              <button class=\"button\">{questionObj.answers[1]}</button>\n              <button class=\"button\">{questionObj.answers[2]}</button>\n              <button class=\"button\">{questionObj.answers[3]}</button>\n            </div>\n          </div>;\n         });\n      return () => {\n        \n      };\n    }, [nextQuestion])\n    return (\n        <MyContext.Provider value={{questionsArray,nextQuestion,setNextQuestion}} >\n            {children}\n        </MyContext.Provider>\n    )\n}\n\nexport default MyProvider\n\n"]},"metadata":{},"sourceType":"module"}