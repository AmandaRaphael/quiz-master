{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/components/QuestionContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport MyContext from \"../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionContainer = () => {\n  _s();\n\n  const {\n    selected\n  } = useContext(MyContext);\n  const randomQuestionsArray = questionsArray.sort(() => 0.5 - Math.random());\n\n  const answerButtonHandler = e => {\n    setSelected(true); //BUG:when answer key is clicked for the first time next question is showed and this happens only for the first click.\n\n    e.target.classList.add(\"selectedButton\");\n  };\n\n  const answerButtons = randomQuestionsArray[nextQuestion - 1].answers.sort(() => 0.5 - Math.random()).map((ans, i) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: answerButtonHandler,\n      className: buttonClass,\n      children: ans\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }, this);\n  });\n\n  const showQuestion = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"padding\",\n      children: [randomQuestionsArray[nextQuestion - 1].question, nextQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerButton flex\",\n      children: answerButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 4\n  }, this);\n\n  const nextQHandler = () => {\n    console.log(\"bext\");\n\n    if (nextQuestion < randomQuestionsArray.length) {\n      setNextQuestion(nextQuestion => nextQuestion + 1);\n      setSelected(false); //answerButtons.map((button) => setButtonClass(\"button\"));\n\n      setButtonClass(\"button\"); //this didnt work the way i expected\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionContainer flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionBox \",\n      children: [showQuestion, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paddingTop flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !selected,\n          onClick: nextQHandler,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionContainer, \"dC7vP/2slrDSNazIEg5BmExTGK0=\");\n\n_c = QuestionContainer;\nexport default QuestionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionContainer\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/components/QuestionContainer.jsx"],"names":["React","useContext","MyContext","QuestionContainer","selected","randomQuestionsArray","questionsArray","sort","Math","random","answerButtonHandler","e","setSelected","target","classList","add","answerButtons","nextQuestion","answers","map","ans","i","buttonClass","showQuestion","question","nextQHandler","console","log","length","setNextQuestion","setButtonClass"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAGC,IAAAA;AAAH,MAAgBH,UAAU,CAACC,SAAD,CAAhC;AACD,QAAMG,oBAAoB,GAAGC,cAAc,CAACC,IAAf,CAAoB,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAhC,CAA7B;;AAEA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjCC,IAAAA,WAAW,CAAC,IAAD,CAAX,CADiC,CACd;;AACnBD,IAAAA,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,gBAAvB;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAGX,oBAAoB,CAACY,YAAY,GAAG,CAAhB,CAApB,CAAuCC,OAAvC,CACnBX,IADmB,CACd,MAAM,MAAMC,IAAI,CAACC,MAAL,EADE,EAEnBU,GAFmB,CAEf,CAACC,GAAD,EAAMC,CAAN,KAAY;AACf,wBACE;AAAgB,MAAA,OAAO,EAAEX,mBAAzB;AAA8C,MAAA,SAAS,EAAEY,WAAzD;AAAA,gBACGF;AADH,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GARmB,CAAtB;;AASA,QAAME,YAAY,gBAChB;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA,iBACGlB,oBAAoB,CAACY,YAAY,GAAG,CAAhB,CAApB,CAAuCO,QAD1C,EAEGP,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMS,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIV,YAAY,GAAGZ,oBAAoB,CAACuB,MAAxC,EAAgD;AAC9CC,MAAAA,eAAe,CAAEZ,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACAL,MAAAA,WAAW,CAAC,KAAD,CAAX,CAF8C,CAG9C;;AACAkB,MAAAA,cAAc,CAAC,QAAD,CAAd,CAJ8C,CAIpB;AAC3B;AACF,GARD;;AASC,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACGP,YADH,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAQ,UAAA,QAAQ,EAAE,CAACnB,QAAnB;AAA6B,UAAA,OAAO,EAAEqB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjDD;;GAAMtB,iB;;KAAAA,iB;AAmDN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport MyContext from \"../context/MyContext\";\nconst QuestionContainer = () => {\n  const {  selected } = useContext(MyContext);\n const randomQuestionsArray = questionsArray.sort(() => 0.5 - Math.random());\n\n const answerButtonHandler = (e) => {\n   setSelected(true); //BUG:when answer key is clicked for the first time next question is showed and this happens only for the first click.\n   e.target.classList.add(\"selectedButton\");\n };\n\n const answerButtons = randomQuestionsArray[nextQuestion - 1].answers\n   .sort(() => 0.5 - Math.random())\n   .map((ans, i) => {\n     return (\n       <button key={i} onClick={answerButtonHandler} className={buttonClass}>\n         {ans}\n       </button>\n     );\n   });\n const showQuestion = (\n   <div>\n     <p className=\"padding\">\n       {randomQuestionsArray[nextQuestion - 1].question}\n       {nextQuestion}\n     </p>\n     <div className=\"answerButton flex\">{answerButtons}</div>\n   </div>\n );\n\n const nextQHandler = () => {\n   console.log(\"bext\");\n   if (nextQuestion < randomQuestionsArray.length) {\n     setNextQuestion((nextQuestion) => nextQuestion + 1);\n     setSelected(false);\n     //answerButtons.map((button) => setButtonClass(\"button\"));\n     setButtonClass(\"button\"); //this didnt work the way i expected\n   }\n };\n  return (\n    <div className=\"questionContainer flex\">\n      <div className=\"questionBox \">\n        {showQuestion}\n        <div className=\"paddingTop flex\">\n          <button disabled={!selected} onClick={nextQHandler}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionContainer;\n"]},"metadata":{},"sourceType":"module"}