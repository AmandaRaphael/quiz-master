{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [nextQuestion, setNextQuestion] = useState(1);\n  const questionsArray = [{\n    question: \"Choose the right answer\",\n    answers: [\"This first answer is the only right answer\", \"This is an ancient rite\", \"A wright is a skilled maker of objects\", \"You have forfeited the right to do this\"]\n  }, {\n    question: \"Which answer is the right one?\",\n    answers: [\"I am the one. Pick me! Pick me!\", \"I was number two in the JSON file\", \"We, the people, but three's a crowd\", \"Four tunes favour the bold\"]\n  }, {\n    question: \"Choose the answer with the check mark?\",\n    answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"]\n  }];\n  const [buttonClass, setButtonClass] = useState(\"button\");\n\n  const answerButtonHandler = e => {\n    setSelected(true); // console.log(e.target)\n    // e.target.classList.add(\"selectedButton\")\n\n    answe;\n    setButtonClass(\"selectedButton button\");\n  };\n\n  const answerButtons = questionsArray[nextQuestion - 1].answers.map((ans, i) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: i,\n      onClick: answerButtonHandler,\n      className: buttonClass,\n      children: ans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  });\n\n  const showQuestion = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [questionsArray[nextQuestion - 1].question, nextQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerButton flex\",\n      children: answerButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  const nextQHandler = () => {\n    if (nextQuestion < questionsArray.length) {\n      setNextQuestion(nextQuestion => nextQuestion + 1);\n      setSelected(false);\n    }\n  }; // useEffect(() => {\n  //   return () => {\n  //   };\n  // }, [nextQuestion])\n\n\n  const [selected, setSelected] = useState(false);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionsArray,\n      nextQuestion,\n      setNextQuestion,\n      showQuestion,\n      nextQHandler,\n      selected,\n      setSelected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"RenmhVL0YXld5bqiTwuEFmYvlP0=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx"],"names":["useState","useEffect","MyContext","MyProvider","children","nextQuestion","setNextQuestion","questionsArray","question","answers","buttonClass","setButtonClass","answerButtonHandler","e","setSelected","answe","answerButtons","map","ans","i","showQuestion","nextQHandler","length","selected"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,UAAU,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMO,cAAc,GAAG,CACrB;AACEC,IAAAA,QAAQ,EAAE,yBADZ;AAEEC,IAAAA,OAAO,EAAE,CACP,4CADO,EAEP,yBAFO,EAGP,wCAHO,EAIP,yCAJO;AAFX,GADqB,EAUrB;AACED,IAAAA,QAAQ,EAAE,gCADZ;AAEEC,IAAAA,OAAO,EAAE,CACP,iCADO,EAEP,mCAFO,EAGP,qCAHO,EAIP,4BAJO;AAFX,GAVqB,EAmBrB;AACED,IAAAA,QAAQ,EAAE,wCADZ;AAEEC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,SAA/B,EAA0C,SAA1C;AAFX,GAnBqB,CAAvB;AAwBA,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BX,QAAQ,CAAC,QAAD,CAA1C;;AACA,QAAMY,mBAAmB,GAAIC,CAAD,IAAO;AACjCC,IAAAA,WAAW,CAAC,IAAD,CAAX,CADiC,CAEjC;AACA;;AACAC,IAAAA,KAAK;AACLJ,IAAAA,cAAc,CAAC,uBAAD,CAAd;AACD,GAND;;AAOA,QAAMK,aAAa,GAAGT,cAAc,CAACF,YAAY,GAAG,CAAhB,CAAd,CAAiCI,OAAjC,CAAyCQ,GAAzC,CACpB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAEV,wBACE;AAAQ,MAAA,EAAE,EAAEA,CAAZ;AAAe,MAAA,OAAO,EAAEP,mBAAxB;AAA6C,MAAA,SAAS,EAAGF,WAAzD;AAAA,gBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GARmB,CAAtB;;AAUA,QAAME,YAAY,gBAChB;AAAA,4BACE;AAAA,iBACGb,cAAc,CAACF,YAAY,GAAG,CAAhB,CAAd,CAAiCG,QADpC,EAEGH,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCW;AAApC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMK,YAAY,GAAG,MAAM;AACzB,QAAIhB,YAAY,GAAGE,cAAc,CAACe,MAAlC,EAA0C;AACxChB,MAAAA,eAAe,CAAED,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACAS,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GALD,CAtDmC,CA4DnC;AAEA;AAEA;AACA;;;AACA,QAAM,CAACS,QAAD,EAAWT,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,sBACE,QAAC,SAAD,CAAW,QAAX;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,cADK;AAELF,MAAAA,YAFK;AAGLC,MAAAA,eAHK;AAILc,MAAAA,YAJK;AAKLC,MAAAA,YALK;AAMLE,MAAAA,QANK;AAOLT,MAAAA;AAPK,KADT;AAAA,cAWGV;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlFD;;GAAMD,U;;KAAAA,U;AAoFN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport MyContext from \"./MyContext\";\nconst MyProvider = ({ children }) => {\n  const [nextQuestion, setNextQuestion] = useState(1);\n  const questionsArray = [\n    {\n      question: \"Choose the right answer\",\n      answers: [\n        \"This first answer is the only right answer\",\n        \"This is an ancient rite\",\n        \"A wright is a skilled maker of objects\",\n        \"You have forfeited the right to do this\",\n      ],\n    },\n    {\n      question: \"Which answer is the right one?\",\n      answers: [\n        \"I am the one. Pick me! Pick me!\",\n        \"I was number two in the JSON file\",\n        \"We, the people, but three's a crowd\",\n        \"Four tunes favour the bold\",\n      ],\n    },\n    {\n      question: \"Choose the answer with the check mark?\",\n      answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"],\n    },\n  ];\n  const[buttonClass,setButtonClass]=useState(\"button\")\n  const answerButtonHandler = (e) => {\n    setSelected(true);\n    // console.log(e.target)\n    // e.target.classList.add(\"selectedButton\")\n    answe\n    setButtonClass(\"selectedButton button\")\n  };\n  const answerButtons = questionsArray[nextQuestion - 1].answers.map(\n    (ans, i) => {\n     \n      return (\n        <button id={i} onClick={answerButtonHandler} className= {buttonClass}>\n          {ans}\n        </button>\n      );\n    }\n  );\n  const showQuestion = (\n    <div>\n      <p>\n        {questionsArray[nextQuestion - 1].question}\n        {nextQuestion}\n      </p>\n      <div className=\"answerButton flex\">{answerButtons}</div>\n    </div>\n  );\n\n  const nextQHandler = () => {\n    if (nextQuestion < questionsArray.length) {\n      setNextQuestion((nextQuestion) => nextQuestion + 1);\n      setSelected(false);\n    }\n  };\n  // useEffect(() => {\n\n  //   return () => {\n\n  //   };\n  // }, [nextQuestion])\n  const [selected, setSelected] = useState(false);\n  return (\n    <MyContext.Provider\n      value={{\n        questionsArray,\n        nextQuestion,\n        setNextQuestion,\n        showQuestion,\n        nextQHandler,\n        selected,\n        setSelected,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"]},"metadata":{},"sourceType":"module"}