{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport questionsArray from \"../data/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [selected, setSelected] = useState(false);\n  const [nextQuestion, setNextQuestion] = useState(1);\n  const [buttonClass, setButtonClass] = useState(\"button\");\n\n  const answerButtonHandler = e => {\n    setSelected(true);\n    e.target.classList.add(\"selectedButton\");\n  };\n\n  const answerButtons = questionsArray[nextQuestion - 1].answers.map((ans, i) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: answerButtonHandler,\n      className: buttonClass,\n      children: ans\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  });\n\n  const showQuestion = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: [questionsArray[nextQuestion - 1].question, nextQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerButton flex\",\n      children: answerButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  const nextQHandler = () => {\n    if (nextQuestion < questionsArray.length) {\n      setNextQuestion(nextQuestion => nextQuestion + 1);\n      setSelected(false);\n      answerButtons.map(button => setButtonClass(\"button\")); //this didnt work the way i expected\n    }\n  }; // useEffect(() => {\n  //   return () => {\n  //   };\n  // }, [nextQuestion])\n\n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionsArray,\n      nextQuestion,\n      setNextQuestion,\n      showQuestion,\n      nextQHandler,\n      selected,\n      setSelected\n    },\n    children: [\"@\", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"5NsBDiuh2AgzMrU4Pm9UrzLL9hQ=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx"],"names":["useState","useEffect","MyContext","questionsArray","MyProvider","children","selected","setSelected","nextQuestion","setNextQuestion","buttonClass","setButtonClass","answerButtonHandler","e","target","classList","add","answerButtons","answers","map","ans","i","showQuestion","question","nextQHandler","length","button"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AACA,MAAMC,UAAU,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAK,CAACU,WAAD,EAAaC,cAAb,IAA6BX,QAAQ,CAAC,QAAD,CAA1C;;AACA,QAAMY,mBAAmB,GAAIC,CAAD,IAAO;AACjCN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACCM,IAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,gBAAvB;AACF,GAHD;;AAKA,QAAMC,aAAa,GAAGd,cAAc,CAACK,YAAY,GAAG,CAAhB,CAAd,CAAiCU,OAAjC,CAAyCC,GAAzC,CACpB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACV,wBACE;AAAgB,MAAA,OAAO,EAAET,mBAAzB;AAA8C,MAAA,SAAS,EAAGF,WAA1D;AAAA,gBACGU;AADH,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAPmB,CAAtB;;AASA,QAAMC,YAAY,gBAChB;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA,iBACGnB,cAAc,CAACK,YAAY,GAAG,CAAhB,CAAd,CAAiCe,QADpC,EAEGf,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCS;AAApC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMO,YAAY,GAAG,MAAM;AACzB,QAAIhB,YAAY,GAAGL,cAAc,CAACsB,MAAlC,EAA0C;AACxChB,MAAAA,eAAe,CAAED,YAAD,IAAkBA,YAAY,GAAG,CAAlC,CAAf;AACAD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACNU,MAAAA,aAAa,CAACE,GAAd,CAAmBO,MAAD,IAAUf,cAAc,CAAC,QAAD,CAA1C,EAH8C,CAIxC;AACD;AACF,GAPD,CA5BmC,CAoCnC;AAEA;AAEA;AACA;;;AAEA,sBACE,QAAC,SAAD,CAAW,QAAX;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,cADK;AAELK,MAAAA,YAFK;AAGLC,MAAAA,eAHK;AAILa,MAAAA,YAJK;AAKLE,MAAAA,YALK;AAMLlB,MAAAA,QANK;AAOLC,MAAAA;AAPK,KADT;AAAA,oBAWGF,QAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1DD;;GAAMD,U;;KAAAA,U;AA4DN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport questionsArray from \"../data/questions\"\nconst MyProvider = ({ children }) => {\n  const [selected, setSelected] = useState(false);\n  const [nextQuestion, setNextQuestion] = useState(1);\n  const[buttonClass,setButtonClass]=useState(\"button\")\n  const answerButtonHandler = (e) => {\n    setSelected(true);\n     e.target.classList.add(\"selectedButton\")\n  }\n  \n  const answerButtons = questionsArray[nextQuestion - 1].answers.map(\n    (ans, i) => {\n      return (\n        <button key={i} onClick={answerButtonHandler} className= {buttonClass}>\n          {ans}\n        </button>\n      );\n    }\n  );\n  const showQuestion = (\n    <div>\n      <p className=\"\">\n        {questionsArray[nextQuestion - 1].question}\n        {nextQuestion}\n      </p>\n      <div className=\"answerButton flex\">{answerButtons}</div>\n    </div>\n  );\n\n  const nextQHandler = () => {\n    if (nextQuestion < questionsArray.length) {\n      setNextQuestion((nextQuestion) => nextQuestion + 1);\n      setSelected(false);\nanswerButtons.map((button)=>setButtonClass(\"button\"))\n      //this didnt work the way i expected\n    }\n  };\n  // useEffect(() => {\n\n  //   return () => {\n\n  //   };\n  // }, [nextQuestion])\n\n  return (\n    <MyContext.Provider\n      value={{\n        questionsArray,\n        nextQuestion,\n        setNextQuestion,\n        showQuestion,\n        nextQHandler,\n        selected,\n        setSelected,\n      }}\n    >@\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"]},"metadata":{},"sourceType":"module"}