{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [nextQuestion, setNextQuestion] = useState(1);\n  const questionsArray = [{\n    question: \"Choose the right answer\",\n    answers: [\"This first answer is the only right answer\", \"This is an ancient rite\", \"A wright is a skilled maker of objects\", \"You have forfeited the right to do this\"]\n  }, {\n    question: \"Which answer is the right one?\",\n    answers: [\"I am the one. Pick me! Pick me!\", \"I was number two in the JSON file\", \"We, the people, but three's a crowd\", \"Four tunes favour the bold\"]\n  }, {\n    question: \"Choose the answer with the check mark?\",\n    answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"]\n  }];\n\n  const answerButtonHandler = () => {};\n\n  const showQuestion = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [questionsArray[nextQuestion - 1].question, nextQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerButton flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerButtonHandler,\n        class: \"button\",\n        children: questionsArray[nextQuestion - 1].answers[nextQuestion - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerButtonHandler,\n        class: \"button\",\n        children: questionsArray[nextQuestion - 1].answers[nextQuestion - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerButtonHandler,\n        class: \"button\",\n        children: questionsArray[nextQuestion - 1].answers[nextQuestion - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerButtonHandler,\n        class: \"button\",\n        children: questionsArray[nextQuestion - 1].answers[nextQuestion - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 6\n  }, this);\n\n  const nextQHandler = () => {\n    if (nextQuestion < questionsArray.length) {\n      setNextQuestion(nextQuestion => nextQuestion + 1);\n    }\n  }; // useEffect(() => {\n  //   return () => {\n  //   };\n  // }, [nextQuestion])\n\n\n  const [selected, setSelected] = useState(false);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionsArray,\n      nextQuestion,\n      setNextQuestion,\n      showQuestion,\n      nextQHandler,\n      selected,\n      setSelected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyProvider, \"G92bWRWU15KG7KwVapqWOARg8o4=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/spa/quiz-AmandaRaphael/src/context/MyProvider.jsx"],"names":["useState","useEffect","MyContext","MyProvider","children","nextQuestion","setNextQuestion","questionsArray","question","answers","answerButtonHandler","showQuestion","nextQHandler","length","selected","setSelected"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from \"react\";\n\nimport MyContext from \"./MyContext\";\nconst MyProvider = ({ children }) => {\n   const [nextQuestion, setNextQuestion] = useState(1)\n    const questionsArray = [\n      {\n        question: \"Choose the right answer\",\n        answers: [\n          \"This first answer is the only right answer\",\n          \"This is an ancient rite\",\n          \"A wright is a skilled maker of objects\",\n          \"You have forfeited the right to do this\",\n        ],\n      },\n      {\n        question: \"Which answer is the right one?\",\n        answers: [\n          \"I am the one. Pick me! Pick me!\",\n          \"I was number two in the JSON file\",\n          \"We, the people, but three's a crowd\",\n          \"Four tunes favour the bold\",\n        ],\n      },\n      {\n        question: \"Choose the answer with the check mark?\",\n        answers: [\"✓ Check!\", \"♚♕♖ Checkmate!\", \"× cross\", \"⇨ right\"],\n      },\n    ];\n  const answerButtonHandler = ()=> {\n    \n  }\n   const showQuestion = (\n     <div>\n       <p>\n         {questionsArray[nextQuestion - 1].question}\n         {nextQuestion}\n       </p>\n       <div className=\"answerButton flex\">\n         <button onClick={answerButtonHandler} class=\"button\">\n           {questionsArray[nextQuestion - 1].answers[nextQuestion - 1]}\n         </button>\n         <button onClick={answerButtonHandler} class=\"button\">\n           {questionsArray[nextQuestion - 1].answers[nextQuestion - 1]}\n         </button>\n         <button onClick={answerButtonHandler} class=\"button\">\n           {questionsArray[nextQuestion - 1].answers[nextQuestion - 1]}\n         </button>\n         <button onClick={answerButtonHandler} class=\"button\">\n           {questionsArray[nextQuestion - 1].answers[nextQuestion - 1]}\n         </button>\n       </div>\n     </div>\n   );\n        \n    const nextQHandler = () => {\n      \n            if (nextQuestion < questionsArray.length) {\n               setNextQuestion((nextQuestion)=>nextQuestion+1)\n           }\n    }\n    // useEffect(() => {\n        \n    //   return () => {\n        \n    //   };\n    // }, [nextQuestion])\n  const [selected,setSelected]=useState(false)\n    return (\n        <MyContext.Provider value={{questionsArray,nextQuestion,setNextQuestion,showQuestion,nextQHandler,selected,setSelected}} >\n            {children}\n        </MyContext.Provider>\n    )\n}\n\nexport default MyProvider\n\n"]},"metadata":{},"sourceType":"module"}